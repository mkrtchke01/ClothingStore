// <auto-generated />
using System;
using ClothingStore.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ClothingStore.Persistence.Migrations
{
    [DbContext(typeof(ClothingStoreDbContext))]
    partial class ClothingStoreDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ClothingStore.Domain.Brand", b =>
                {
                    b.Property<int>("BrandId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BrandId"));

                    b.Property<string>("BrandName")
                        .IsRequired()
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("BrandId");

                    b.HasIndex("BrandId")
                        .IsUnique();

                    b.ToTable("Brands");

                    b.HasData(
                        new
                        {
                            BrandId = 1,
                            BrandName = "Adidas",
                            CreatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7374),
                            DeletedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7387)
                        },
                        new
                        {
                            BrandId = 2,
                            BrandName = "Puma",
                            CreatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7390),
                            DeletedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7390)
                        },
                        new
                        {
                            BrandId = 3,
                            BrandName = "Nike",
                            CreatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7391),
                            DeletedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7391)
                        },
                        new
                        {
                            BrandId = 4,
                            BrandName = "Diadora",
                            CreatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7392),
                            DeletedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7392)
                        },
                        new
                        {
                            BrandId = 5,
                            BrandName = "The North Face",
                            CreatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7393),
                            DeletedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7394)
                        },
                        new
                        {
                            BrandId = 6,
                            BrandName = "Fred Perry",
                            CreatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7395),
                            DeletedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7396)
                        },
                        new
                        {
                            BrandId = 7,
                            BrandName = "Asics",
                            CreatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7396),
                            DeletedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7397)
                        },
                        new
                        {
                            BrandId = 8,
                            BrandName = "Vans",
                            CreatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7397),
                            DeletedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7398)
                        },
                        new
                        {
                            BrandId = 9,
                            BrandName = "Reebook",
                            CreatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7434),
                            DeletedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7435)
                        },
                        new
                        {
                            BrandId = 10,
                            BrandName = "Converse",
                            CreatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7437),
                            DeletedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7437)
                        },
                        new
                        {
                            BrandId = 11,
                            BrandName = "ТВОЕ",
                            CreatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7438),
                            DeletedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7438)
                        },
                        new
                        {
                            BrandId = 12,
                            BrandName = "Mark Formelle",
                            CreatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7439),
                            DeletedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7439)
                        });
                });

            modelBuilder.Entity("ClothingStore.Domain.Color", b =>
                {
                    b.Property<int>("ColorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ColorId"));

                    b.Property<string>("ColorName")
                        .IsRequired()
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ColorId");

                    b.HasIndex("ColorId")
                        .IsUnique();

                    b.ToTable("Colors");

                    b.HasData(
                        new
                        {
                            ColorId = 1,
                            ColorName = "Белый",
                            CreatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7524),
                            DeletedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7524)
                        },
                        new
                        {
                            ColorId = 2,
                            ColorName = "Черный",
                            CreatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7527),
                            DeletedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7527)
                        },
                        new
                        {
                            ColorId = 3,
                            ColorName = "Желтый",
                            CreatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7528),
                            DeletedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7528)
                        },
                        new
                        {
                            ColorId = 4,
                            ColorName = "Коричневый",
                            CreatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7529),
                            DeletedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7529)
                        },
                        new
                        {
                            ColorId = 5,
                            ColorName = "Розовый",
                            CreatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7529),
                            DeletedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7530)
                        },
                        new
                        {
                            ColorId = 6,
                            ColorName = "Бежевый",
                            CreatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7531),
                            DeletedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7532)
                        },
                        new
                        {
                            ColorId = 7,
                            ColorName = "Серый",
                            CreatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7532),
                            DeletedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7532)
                        },
                        new
                        {
                            ColorId = 8,
                            ColorName = "Зеленый",
                            CreatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7533),
                            DeletedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7533)
                        },
                        new
                        {
                            ColorId = 9,
                            ColorName = "Синий",
                            CreatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7534),
                            DeletedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7534)
                        },
                        new
                        {
                            ColorId = 10,
                            ColorName = "Фиолетовый",
                            CreatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7536),
                            DeletedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7536)
                        },
                        new
                        {
                            ColorId = 11,
                            ColorName = "Красный",
                            CreatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7537),
                            DeletedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7537)
                        },
                        new
                        {
                            ColorId = 12,
                            ColorName = "Оранжевый",
                            CreatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7538),
                            DeletedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7538)
                        });
                });

            modelBuilder.Entity("ClothingStore.Domain.Gender", b =>
                {
                    b.Property<int>("GenderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GenderId"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GenderName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("GenderId");

                    b.HasIndex("GenderId")
                        .IsUnique();

                    b.ToTable("Genders");

                    b.HasData(
                        new
                        {
                            GenderId = 1,
                            CreatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7591),
                            DeletedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GenderName = "Male",
                            UpdatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7592)
                        },
                        new
                        {
                            GenderId = 2,
                            CreatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7595),
                            DeletedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GenderName = "Female",
                            UpdatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7595)
                        });
                });

            modelBuilder.Entity("ClothingStore.Domain.Location", b =>
                {
                    b.Property<int>("LocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LocationId"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Index")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("LocationId");

                    b.HasIndex("LocationId")
                        .IsUnique();

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            LocationId = 1,
                            City = "Витебск",
                            Country = "Беларусь",
                            CreatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7695),
                            DeletedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Index = "210021",
                            UpdatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7696)
                        },
                        new
                        {
                            LocationId = 2,
                            City = "Москва",
                            Country = "Россия",
                            CreatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7698),
                            DeletedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Index = "210021",
                            UpdatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7699)
                        },
                        new
                        {
                            LocationId = 3,
                            City = "Киев",
                            Country = "Украина",
                            CreatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7700),
                            DeletedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Index = "210021",
                            UpdatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7700)
                        },
                        new
                        {
                            LocationId = 4,
                            City = "Могилев",
                            Country = "Беларусь",
                            CreatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7701),
                            DeletedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Index = "210021",
                            UpdatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7701)
                        },
                        new
                        {
                            LocationId = 5,
                            City = "Минск",
                            Country = "Беларусь",
                            CreatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7702),
                            DeletedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Index = "210021",
                            UpdatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7702)
                        });
                });

            modelBuilder.Entity("ClothingStore.Domain.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("GenderId")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasPrecision(9, 2)
                        .HasColumnType("decimal(9,2)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ProductId");

                    b.HasIndex("BrandId");

                    b.HasIndex("GenderId");

                    b.HasIndex("ProductId")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            BrandId = 10,
                            CreatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7934),
                            DeletedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Практичная и прочная обувь.",
                            GenderId = 1,
                            Image = "https://avatars.mds.yandex.net/get-mpic/7543961/img_id2876985684977519291.jpeg/orig",
                            Price = 80m,
                            ProductName = "Кеды Converse",
                            UpdatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7935),
                            UserId = "3046bb27-a9f9-4cfb-87ee-0853cae48701"
                        },
                        new
                        {
                            ProductId = 2,
                            BrandId = 1,
                            CreatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7938),
                            DeletedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Основная часть кроссовок изготовлена из устойчивых к износу материалов.",
                            GenderId = 2,
                            Image = "https://basket-10.wb.ru/vol1492/part149253/149253341/images/big/3.jpg",
                            Price = 175m,
                            ProductName = "Кроссовки Adidas",
                            UpdatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7938),
                            UserId = "3046bb27-a9f9-4cfb-87ee-0853cae48701"
                        },
                        new
                        {
                            ProductId = 3,
                            BrandId = 6,
                            CreatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7939),
                            DeletedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Изделие из фактурного хлопкового трикотажа украшено вышивкой с принтом на груди",
                            GenderId = 1,
                            Image = "https://a.lmcdn.ru/product/R/T/RTLABL206701_17128948_1_v1_2x.jpg",
                            Price = 289m,
                            ProductName = "Футболка Fred Perry",
                            UpdatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7940),
                            UserId = "3046bb27-a9f9-4cfb-87ee-0853cae48701"
                        },
                        new
                        {
                            ProductId = 4,
                            BrandId = 7,
                            CreatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7940),
                            DeletedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Кроссовки выполнены из сетчатого текстиля, растягивается при естественном движении стопы и создает удобную посадку. ",
                            GenderId = 1,
                            Image = "https://a.lmcdn.ru/product/R/T/RTLACH890601_19173162_1_v1.jpg",
                            Price = 486m,
                            ProductName = "Кроссовки Asics",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = "3046bb27-a9f9-4cfb-87ee-0853cae48701"
                        },
                        new
                        {
                            ProductId = 5,
                            BrandId = 1,
                            CreatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7941),
                            DeletedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Основная часть кроссовок изготовлена из устойчивых к износу материалов.",
                            GenderId = 2,
                            Image = "https://basket-10.wb.ru/vol1492/part149253/149253341/images/big/3.jpg",
                            Price = 175m,
                            ProductName = "Кроссовки Adidas",
                            UpdatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7942),
                            UserId = "3046bb27-a9f9-4cfb-87ee-0853cae48701"
                        },
                        new
                        {
                            ProductId = 6,
                            BrandId = 6,
                            CreatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7943),
                            DeletedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Изделие из фактурного хлопкового трикотажа украшено вышивкой с принтом на груди",
                            GenderId = 1,
                            Image = "https://a.lmcdn.ru/product/R/T/RTLABL206701_17128948_1_v1_2x.jpg",
                            Price = 289m,
                            ProductName = "Футболка Fred Perry",
                            UpdatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7944),
                            UserId = "3046bb27-a9f9-4cfb-87ee-0853cae48701"
                        },
                        new
                        {
                            ProductId = 7,
                            BrandId = 7,
                            CreatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7945),
                            DeletedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Кроссовки выполнены из сетчатого текстиля, растягивается при естественном движении стопы и создает удобную посадку. ",
                            GenderId = 1,
                            Image = "https://a.lmcdn.ru/product/R/T/RTLACH890601_19173162_1_v1.jpg",
                            Price = 486m,
                            ProductName = "Кроссовки Asics",
                            UpdatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7945),
                            UserId = "3046bb27-a9f9-4cfb-87ee-0853cae48701"
                        },
                        new
                        {
                            ProductId = 8,
                            BrandId = 1,
                            CreatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7947),
                            DeletedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Основная часть кроссовок изготовлена из устойчивых к износу материалов.",
                            GenderId = 2,
                            Image = "https://basket-10.wb.ru/vol1492/part149253/149253341/images/big/3.jpg",
                            Price = 175m,
                            ProductName = "Кроссовки Adidas",
                            UpdatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7948),
                            UserId = "3046bb27-a9f9-4cfb-87ee-0853cae48701"
                        },
                        new
                        {
                            ProductId = 9,
                            BrandId = 6,
                            CreatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7949),
                            DeletedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Изделие из фактурного хлопкового трикотажа украшено вышивкой с принтом на груди",
                            GenderId = 1,
                            Image = "https://a.lmcdn.ru/product/R/T/RTLABL206701_17128948_1_v1_2x.jpg",
                            Price = 289m,
                            ProductName = "Футболка Fred Perry",
                            UpdatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7949),
                            UserId = "3046bb27-a9f9-4cfb-87ee-0853cae48701"
                        },
                        new
                        {
                            ProductId = 10,
                            BrandId = 7,
                            CreatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7951),
                            DeletedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Кроссовки выполнены из сетчатого текстиля, растягивается при естественном движении стопы и создает удобную посадку. ",
                            GenderId = 1,
                            Image = "https://a.lmcdn.ru/product/R/T/RTLACH890601_19173162_1_v1.jpg",
                            Price = 486m,
                            ProductName = "Кроссовки Asics",
                            UpdatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7951),
                            UserId = "3046bb27-a9f9-4cfb-87ee-0853cae48701"
                        },
                        new
                        {
                            ProductId = 11,
                            BrandId = 1,
                            CreatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7952),
                            DeletedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Основная часть кроссовок изготовлена из устойчивых к износу материалов.",
                            GenderId = 2,
                            Image = "https://basket-10.wb.ru/vol1492/part149253/149253341/images/big/3.jpg",
                            Price = 175m,
                            ProductName = "Кроссовки Adidas",
                            UpdatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7952),
                            UserId = "3046bb27-a9f9-4cfb-87ee-0853cae48701"
                        },
                        new
                        {
                            ProductId = 12,
                            BrandId = 6,
                            CreatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7954),
                            DeletedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Изделие из фактурного хлопкового трикотажа украшено вышивкой с принтом на груди",
                            GenderId = 1,
                            Image = "https://a.lmcdn.ru/product/R/T/RTLABL206701_17128948_1_v1_2x.jpg",
                            Price = 289m,
                            ProductName = "Футболка Fred Perry",
                            UpdatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7955),
                            UserId = "3046bb27-a9f9-4cfb-87ee-0853cae48701"
                        },
                        new
                        {
                            ProductId = 13,
                            BrandId = 7,
                            CreatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7956),
                            DeletedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Кроссовки выполнены из сетчатого текстиля, растягивается при естественном движении стопы и создает удобную посадку. ",
                            GenderId = 1,
                            Image = "https://a.lmcdn.ru/product/R/T/RTLACH890601_19173162_1_v1.jpg",
                            Price = 486m,
                            ProductName = "Кроссовки Asics",
                            UpdatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7956),
                            UserId = "3046bb27-a9f9-4cfb-87ee-0853cae48701"
                        },
                        new
                        {
                            ProductId = 14,
                            BrandId = 1,
                            CreatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7957),
                            DeletedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Основная часть кроссовок изготовлена из устойчивых к износу материалов.",
                            GenderId = 2,
                            Image = "https://basket-10.wb.ru/vol1492/part149253/149253341/images/big/3.jpg",
                            Price = 175m,
                            ProductName = "Кроссовки Adidas",
                            UpdatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7958),
                            UserId = "3046bb27-a9f9-4cfb-87ee-0853cae48701"
                        },
                        new
                        {
                            ProductId = 15,
                            BrandId = 6,
                            CreatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7960),
                            DeletedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Изделие из фактурного хлопкового трикотажа украшено вышивкой с принтом на груди",
                            GenderId = 1,
                            Image = "https://a.lmcdn.ru/product/R/T/RTLABL206701_17128948_1_v1_2x.jpg",
                            Price = 289m,
                            ProductName = "Футболка Fred Perry",
                            UpdatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7960),
                            UserId = "3046bb27-a9f9-4cfb-87ee-0853cae48701"
                        },
                        new
                        {
                            ProductId = 16,
                            BrandId = 7,
                            CreatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7961),
                            DeletedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Кроссовки выполнены из сетчатого текстиля, растягивается при естественном движении стопы и создает удобную посадку. ",
                            GenderId = 1,
                            Image = "https://a.lmcdn.ru/product/R/T/RTLACH890601_19173162_1_v1.jpg",
                            Price = 486m,
                            ProductName = "Кроссовки Asics",
                            UpdatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7962),
                            UserId = "3046bb27-a9f9-4cfb-87ee-0853cae48701"
                        },
                        new
                        {
                            ProductId = 17,
                            BrandId = 1,
                            CreatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7965),
                            DeletedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Основная часть кроссовок изготовлена из устойчивых к износу материалов.",
                            GenderId = 2,
                            Image = "https://basket-10.wb.ru/vol1492/part149253/149253341/images/big/3.jpg",
                            Price = 175m,
                            ProductName = "Кроссовки Adidas",
                            UpdatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7965),
                            UserId = "3046bb27-a9f9-4cfb-87ee-0853cae48701"
                        },
                        new
                        {
                            ProductId = 18,
                            BrandId = 6,
                            CreatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7967),
                            DeletedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Изделие из фактурного хлопкового трикотажа украшено вышивкой с принтом на груди",
                            GenderId = 1,
                            Image = "https://a.lmcdn.ru/product/R/T/RTLABL206701_17128948_1_v1_2x.jpg",
                            Price = 289m,
                            ProductName = "Футболка Fred Perry",
                            UpdatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7967),
                            UserId = "3046bb27-a9f9-4cfb-87ee-0853cae48701"
                        },
                        new
                        {
                            ProductId = 19,
                            BrandId = 7,
                            CreatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7968),
                            DeletedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Кроссовки выполнены из сетчатого текстиля, растягивается при естественном движении стопы и создает удобную посадку. ",
                            GenderId = 1,
                            Image = "https://a.lmcdn.ru/product/R/T/RTLACH890601_19173162_1_v1.jpg",
                            Price = 486m,
                            ProductName = "Кроссовки Asics",
                            UpdatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7969),
                            UserId = "3046bb27-a9f9-4cfb-87ee-0853cae48701"
                        },
                        new
                        {
                            ProductId = 20,
                            BrandId = 1,
                            CreatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7970),
                            DeletedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Основная часть кроссовок изготовлена из устойчивых к износу материалов.",
                            GenderId = 2,
                            Image = "https://basket-10.wb.ru/vol1492/part149253/149253341/images/big/3.jpg",
                            Price = 175m,
                            ProductName = "Кроссовки Adidas",
                            UpdatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7970),
                            UserId = "3046bb27-a9f9-4cfb-87ee-0853cae48701"
                        },
                        new
                        {
                            ProductId = 21,
                            BrandId = 6,
                            CreatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7972),
                            DeletedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Изделие из фактурного хлопкового трикотажа украшено вышивкой с принтом на груди",
                            GenderId = 1,
                            Image = "https://a.lmcdn.ru/product/R/T/RTLABL206701_17128948_1_v1_2x.jpg",
                            Price = 289m,
                            ProductName = "Футболка Fred Perry",
                            UpdatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7972),
                            UserId = "3046bb27-a9f9-4cfb-87ee-0853cae48701"
                        },
                        new
                        {
                            ProductId = 22,
                            BrandId = 7,
                            CreatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7973),
                            DeletedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Кроссовки выполнены из сетчатого текстиля, растягивается при естественном движении стопы и создает удобную посадку. ",
                            GenderId = 1,
                            Image = "https://a.lmcdn.ru/product/R/T/RTLACH890601_19173162_1_v1.jpg",
                            Price = 486m,
                            ProductName = "Кроссовки Asics",
                            UpdatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7974),
                            UserId = "3046bb27-a9f9-4cfb-87ee-0853cae48701"
                        },
                        new
                        {
                            ProductId = 23,
                            BrandId = 1,
                            CreatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7975),
                            DeletedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Основная часть кроссовок изготовлена из устойчивых к износу материалов.",
                            GenderId = 2,
                            Image = "https://basket-10.wb.ru/vol1492/part149253/149253341/images/big/3.jpg",
                            Price = 175m,
                            ProductName = "Кроссовки Adidas",
                            UpdatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7975),
                            UserId = "3046bb27-a9f9-4cfb-87ee-0853cae48701"
                        },
                        new
                        {
                            ProductId = 24,
                            BrandId = 6,
                            CreatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7976),
                            DeletedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Изделие из фактурного хлопкового трикотажа украшено вышивкой с принтом на груди",
                            GenderId = 1,
                            Image = "https://a.lmcdn.ru/product/R/T/RTLABL206701_17128948_1_v1_2x.jpg",
                            Price = 289m,
                            ProductName = "Футболка Fred Perry",
                            UpdatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7976),
                            UserId = "3046bb27-a9f9-4cfb-87ee-0853cae48701"
                        },
                        new
                        {
                            ProductId = 25,
                            BrandId = 7,
                            CreatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7977),
                            DeletedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Кроссовки выполнены из сетчатого текстиля, растягивается при естественном движении стопы и создает удобную посадку. ",
                            GenderId = 1,
                            Image = "https://a.lmcdn.ru/product/R/T/RTLACH890601_19173162_1_v1.jpg",
                            Price = 486m,
                            ProductName = "Кроссовки Asics",
                            UpdatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7977),
                            UserId = "3046bb27-a9f9-4cfb-87ee-0853cae48701"
                        },
                        new
                        {
                            ProductId = 26,
                            BrandId = 1,
                            CreatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7978),
                            DeletedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Основная часть кроссовок изготовлена из устойчивых к износу материалов.",
                            GenderId = 2,
                            Image = "https://basket-10.wb.ru/vol1492/part149253/149253341/images/big/3.jpg",
                            Price = 175m,
                            ProductName = "Кроссовки Adidas",
                            UpdatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7979),
                            UserId = "3046bb27-a9f9-4cfb-87ee-0853cae48701"
                        },
                        new
                        {
                            ProductId = 27,
                            BrandId = 6,
                            CreatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7980),
                            DeletedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Изделие из фактурного хлопкового трикотажа украшено вышивкой с принтом на груди",
                            GenderId = 1,
                            Image = "https://a.lmcdn.ru/product/R/T/RTLABL206701_17128948_1_v1_2x.jpg",
                            Price = 289m,
                            ProductName = "Футболка Fred Perry",
                            UpdatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7980),
                            UserId = "3046bb27-a9f9-4cfb-87ee-0853cae48701"
                        },
                        new
                        {
                            ProductId = 28,
                            BrandId = 7,
                            CreatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7981),
                            DeletedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Кроссовки выполнены из сетчатого текстиля, растягивается при естественном движении стопы и создает удобную посадку. ",
                            GenderId = 1,
                            Image = "https://a.lmcdn.ru/product/R/T/RTLACH890601_19173162_1_v1.jpg",
                            Price = 486m,
                            ProductName = "Кроссовки Asics",
                            UpdatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7981),
                            UserId = "3046bb27-a9f9-4cfb-87ee-0853cae48701"
                        },
                        new
                        {
                            ProductId = 29,
                            BrandId = 1,
                            CreatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7982),
                            DeletedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Основная часть кроссовок изготовлена из устойчивых к износу материалов.",
                            GenderId = 2,
                            Image = "https://basket-10.wb.ru/vol1492/part149253/149253341/images/big/3.jpg",
                            Price = 175m,
                            ProductName = "Кроссовки Adidas",
                            UpdatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7983),
                            UserId = "3046bb27-a9f9-4cfb-87ee-0853cae48701"
                        },
                        new
                        {
                            ProductId = 30,
                            BrandId = 6,
                            CreatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7984),
                            DeletedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Изделие из фактурного хлопкового трикотажа украшено вышивкой с принтом на груди",
                            GenderId = 1,
                            Image = "https://a.lmcdn.ru/product/R/T/RTLABL206701_17128948_1_v1_2x.jpg",
                            Price = 289m,
                            ProductName = "Футболка Fred Perry",
                            UpdatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7984),
                            UserId = "3046bb27-a9f9-4cfb-87ee-0853cae48701"
                        },
                        new
                        {
                            ProductId = 31,
                            BrandId = 7,
                            CreatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7985),
                            DeletedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Кроссовки выполнены из сетчатого текстиля, растягивается при естественном движении стопы и создает удобную посадку. ",
                            GenderId = 1,
                            Image = "https://a.lmcdn.ru/product/R/T/RTLACH890601_19173162_1_v1.jpg",
                            Price = 486m,
                            ProductName = "Кроссовки Asics",
                            UpdatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7985),
                            UserId = "3046bb27-a9f9-4cfb-87ee-0853cae48701"
                        },
                        new
                        {
                            ProductId = 32,
                            BrandId = 1,
                            CreatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7986),
                            DeletedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Основная часть кроссовок изготовлена из устойчивых к износу материалов.",
                            GenderId = 2,
                            Image = "https://basket-10.wb.ru/vol1492/part149253/149253341/images/big/3.jpg",
                            Price = 175m,
                            ProductName = "Кроссовки Adidas",
                            UpdatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7987),
                            UserId = "3046bb27-a9f9-4cfb-87ee-0853cae48701"
                        },
                        new
                        {
                            ProductId = 33,
                            BrandId = 6,
                            CreatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7987),
                            DeletedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Изделие из фактурного хлопкового трикотажа украшено вышивкой с принтом на груди",
                            GenderId = 1,
                            Image = "https://a.lmcdn.ru/product/R/T/RTLABL206701_17128948_1_v1_2x.jpg",
                            Price = 289m,
                            ProductName = "Футболка Fred Perry",
                            UpdatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7988),
                            UserId = "3046bb27-a9f9-4cfb-87ee-0853cae48701"
                        },
                        new
                        {
                            ProductId = 34,
                            BrandId = 7,
                            CreatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7990),
                            DeletedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Кроссовки выполнены из сетчатого текстиля, растягивается при естественном движении стопы и создает удобную посадку. ",
                            GenderId = 1,
                            Image = "https://a.lmcdn.ru/product/R/T/RTLACH890601_19173162_1_v1.jpg",
                            Price = 486m,
                            ProductName = "Кроссовки Asics",
                            UpdatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7990),
                            UserId = "3046bb27-a9f9-4cfb-87ee-0853cae48701"
                        });
                });

            modelBuilder.Entity("ClothingStore.Domain.Season", b =>
                {
                    b.Property<int>("SeasonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SeasonId"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SeasonName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("SeasonId");

                    b.HasIndex("SeasonId")
                        .IsUnique();

                    b.ToTable("Seasons");

                    b.HasData(
                        new
                        {
                            SeasonId = 1,
                            CreatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7646),
                            DeletedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SeasonName = "Демисезон",
                            UpdatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7647)
                        },
                        new
                        {
                            SeasonId = 2,
                            CreatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7648),
                            DeletedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SeasonName = "Весна",
                            UpdatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7649)
                        },
                        new
                        {
                            SeasonId = 3,
                            CreatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7649),
                            DeletedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SeasonName = "Зима",
                            UpdatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7650)
                        },
                        new
                        {
                            SeasonId = 4,
                            CreatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7650),
                            DeletedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SeasonName = "Осень",
                            UpdatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7651)
                        },
                        new
                        {
                            SeasonId = 5,
                            CreatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7651),
                            DeletedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SeasonName = "Лето",
                            UpdatedDate = new DateTime(2023, 3, 26, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7652)
                        });
                });

            modelBuilder.Entity("ClothingStore.Domain.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("RefreshToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RefreshTokenExpiryTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "3046bb27-a9f9-4cfb-87ee-0853cae48701",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "b84f97b2-007f-4781-9ee7-9dcedd5185d3",
                            EmailConfirmed = false,
                            LocationId = 1,
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAEAACcQAAAAELXiNd8dU7e8G/cZwkZYkUwRQI1W98Nfl4ZeYH/ax0gk1kuzcvSY4tf2hP4y8o39cw==",
                            PhoneNumberConfirmed = false,
                            RefreshToken = "7iK7mWYVQgEriP+Zoia/UfiMKon/4cqUijRncBrplJpt1C0CJDZkstZsXTtnF4SMsv9Wfv+HU2fErMvHjTPW4g==",
                            RefreshTokenExpiryTime = new DateTime(2023, 3, 27, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7808),
                            SecurityStamp = "DKOIJFTBZLFCJCNGXCZ3AZRQ4BZ2K5SA",
                            TwoFactorEnabled = false,
                            UserName = "mkr.e"
                        },
                        new
                        {
                            Id = "3046bb27-a9f9-4cfb-87ee-0853cae48702",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "b84f97b2-007f-4781-9ee7-9dcedd5185d3",
                            EmailConfirmed = false,
                            LocationId = 2,
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAEAACcQAAAAELXiNd8dU7e8G/cZwkZYkUwRQI1W98Nfl4ZeYH/ax0gk1kuzcvSY4tf2hP4y8o39cw==",
                            PhoneNumberConfirmed = false,
                            RefreshToken = "7iK7mWYVQgEriP+Zoia/UfiMKon/4cqUijRncBrplJpt1C0CJDZkstZsXTtnF4SMsv9Wfv+HU2fErMvHjTPW4g==",
                            RefreshTokenExpiryTime = new DateTime(2023, 3, 27, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7834),
                            SecurityStamp = "DKOIJFTBZLFCJCNGXCZ3AZRQ4BZ2K5SA",
                            TwoFactorEnabled = false,
                            UserName = "Andrey"
                        },
                        new
                        {
                            Id = "3046bb27-a9f9-4cfb-87ee-0853cae48703",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "b84f97b2-007f-4781-9ee7-9dcedd5185d3",
                            EmailConfirmed = false,
                            LocationId = 3,
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAEAACcQAAAAELXiNd8dU7e8G/cZwkZYkUwRQI1W98Nfl4ZeYH/ax0gk1kuzcvSY4tf2hP4y8o39cw==",
                            PhoneNumberConfirmed = false,
                            RefreshToken = "7iK7mWYVQgEriP+Zoia/UfiMKon/4cqUijRncBrplJpt1C0CJDZkstZsXTtnF4SMsv9Wfv+HU2fErMvHjTPW4g==",
                            RefreshTokenExpiryTime = new DateTime(2023, 3, 27, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7840),
                            SecurityStamp = "DKOIJFTBZLFCJCNGXCZ3AZRQ4BZ2K5SA",
                            TwoFactorEnabled = false,
                            UserName = "Vitali"
                        },
                        new
                        {
                            Id = "3046bb27-a9f9-4cfb-87ee-0853cae48704",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "b84f97b2-007f-4781-9ee7-9dcedd5185d3",
                            EmailConfirmed = false,
                            LocationId = 4,
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAEAACcQAAAAELXiNd8dU7e8G/cZwkZYkUwRQI1W98Nfl4ZeYH/ax0gk1kuzcvSY4tf2hP4y8o39cw==",
                            PhoneNumberConfirmed = false,
                            RefreshToken = "7iK7mWYVQgEriP+Zoia/UfiMKon/4cqUijRncBrplJpt1C0CJDZkstZsXTtnF4SMsv9Wfv+HU2fErMvHjTPW4g==",
                            RefreshTokenExpiryTime = new DateTime(2023, 3, 27, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7845),
                            SecurityStamp = "DKOIJFTBZLFCJCNGXCZ3AZRQ4BZ2K5SA",
                            TwoFactorEnabled = false,
                            UserName = "Alexandr"
                        },
                        new
                        {
                            Id = "3046bb27-a9f9-4cfb-87ee-0853cae48705",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "b84f97b2-007f-4781-9ee7-9dcedd5185d3",
                            EmailConfirmed = false,
                            LocationId = 5,
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAEAACcQAAAAELXiNd8dU7e8G/cZwkZYkUwRQI1W98Nfl4ZeYH/ax0gk1kuzcvSY4tf2hP4y8o39cw==",
                            PhoneNumberConfirmed = false,
                            RefreshToken = "7iK7mWYVQgEriP+Zoia/UfiMKon/4cqUijRncBrplJpt1C0CJDZkstZsXTtnF4SMsv9Wfv+HU2fErMvHjTPW4g==",
                            RefreshTokenExpiryTime = new DateTime(2023, 3, 27, 18, 52, 51, 170, DateTimeKind.Local).AddTicks(7853),
                            SecurityStamp = "DKOIJFTBZLFCJCNGXCZ3AZRQ4BZ2K5SA",
                            TwoFactorEnabled = false,
                            UserName = "Vasilisa"
                        });
                });

            modelBuilder.Entity("ColorProduct", b =>
                {
                    b.Property<int>("ColorsColorId")
                        .HasColumnType("int");

                    b.Property<int>("ProductsProductId")
                        .HasColumnType("int");

                    b.HasKey("ColorsColorId", "ProductsProductId");

                    b.HasIndex("ProductsProductId");

                    b.ToTable("ColorProduct");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("ProductSeason", b =>
                {
                    b.Property<int>("ProductsProductId")
                        .HasColumnType("int");

                    b.Property<int>("SeasonsSeasonId")
                        .HasColumnType("int");

                    b.HasKey("ProductsProductId", "SeasonsSeasonId");

                    b.HasIndex("SeasonsSeasonId");

                    b.ToTable("ProductSeason");
                });

            modelBuilder.Entity("ClothingStore.Domain.Product", b =>
                {
                    b.HasOne("ClothingStore.Domain.Brand", "Brand")
                        .WithMany("Products")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClothingStore.Domain.Gender", "Gender")
                        .WithMany("Products")
                        .HasForeignKey("GenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClothingStore.Domain.User", "User")
                        .WithMany("Products")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");

                    b.Navigation("Gender");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ClothingStore.Domain.User", b =>
                {
                    b.HasOne("ClothingStore.Domain.Location", "Location")
                        .WithMany("Users")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");
                });

            modelBuilder.Entity("ColorProduct", b =>
                {
                    b.HasOne("ClothingStore.Domain.Color", null)
                        .WithMany()
                        .HasForeignKey("ColorsColorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClothingStore.Domain.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("ClothingStore.Domain.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("ClothingStore.Domain.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClothingStore.Domain.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("ClothingStore.Domain.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProductSeason", b =>
                {
                    b.HasOne("ClothingStore.Domain.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClothingStore.Domain.Season", null)
                        .WithMany()
                        .HasForeignKey("SeasonsSeasonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ClothingStore.Domain.Brand", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("ClothingStore.Domain.Gender", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("ClothingStore.Domain.Location", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("ClothingStore.Domain.User", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
